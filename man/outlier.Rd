% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outlier.R
\name{outlier}
\alias{outlier}
\title{Outlier}
\usage{
outlier(x = NULL, iqr = 1.5, na.rm = TRUE, type = 7)
}
\arguments{
\item{x}{a numeric vector}

\item{iqr}{a nonnegative constant by which interquartile range (IQR)
will be multiplied to build a "fence," outside which observations
will be considered outliers. For example, if \code{iqr = 1.5},
IQR * 1.5 will be the "fence" outside which observations will be
considered to be outliers. By default, \code{iqr = 1.5}.}

\item{na.rm}{logical. \code{na.rm} argument to be passed onto the
'quantile' function in the 'stats' package. If true, any NA and NaN's
are removed from x before the quantiles are computed.}

\item{type}{\code{type} argument to be passed onto the 'quantile'
function in the 'stats' package. An integer between 1 and 9 selecting
one of the nine quantile algorithms detailed below to be used.
Type '?stats::quantile' for details. By default, \code{type = 7}}
}
\value{
the output will be a numeric vector with outliers removed.
}
\description{
Return outliers in a vector
}
\examples{
# Example 1
outlier(c(1:10, 100))
# The steps below show how the outlier, 100, was obtained
# v1 is the vector of interest
v1 <- c(1:10, 100)
# quantile
stats::quantile(v1)
# first and third quartiles
q1 <- stats::quantile(v1, 0.25)
q3 <- stats::quantile(v1, 0.75)
# interquartile range
interquartile_range <- unname(q3 - q1)
# fence, using the default 1.5 as the factor to multiply the IQR
cutoff_low <- unname(q1 - 1.5 * interquartile_range)
cutoff_high <- unname(q3 + 1.5 * interquartile_range)
v1[v1 < cutoff_low | v1 > cutoff_high]
}
