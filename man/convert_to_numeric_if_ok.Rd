% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_to_numeric_if_ok.R
\name{convert_to_numeric_if_ok}
\alias{convert_to_numeric_if_ok}
\title{Convert a vector to numeric if appropriate}
\usage{
convert_to_numeric_if_ok(x, notify_failure = TRUE, notify_success = TRUE)
}
\arguments{
\item{x}{a vector}

\item{notify_failure}{logical. Should a conversion failure be notified?
(default = TRUE).}

\item{notify_success}{logical. Should a conversion failure be notified?
(default = TRUE)}
}
\description{
Check whether a vector contains only values that can be
interpreted as numbers, and convert to numeric if so.
}
\examples{
\donttest{
# conversion should succeed
convert_to_numeric_if_ok(c(1, "2"))
convert_to_numeric_if_ok(c("1", "2"))
convert_to_numeric_if_ok(
c("1", "2", "Inf", "-Inf", " 123 ", "-1.2", "+0.5", "1e-2"))

# conversion should fail
convert_to_numeric_if_ok(c(1, 2, "a"))
# A vector of diverse test cases to evaluate numeric conversion handling:
crazy_vec <- c(
"123",        # valid integer
" 456 ",      # valid number with leading/trailing whitespace
"-78.9",      # valid negative decimal
"+0.5",       # valid number with explicit plus sign
"1e-3",       # valid scientific notation
"1.2.3",      # invalid: multiple decimal points
"abc123",     # invalid: contains letters
"$100",       # invalid: contains currency symbol
"NaN",        # valid: special numeric value (Not a Number)
"Inf",        # valid: positive infinity
"-Inf",       # valid: negative infinity
"TRUE",       # invalid: logical string, not numeric
"",           # invalid: empty string
" ",          # invalid: whitespace only
"\t\n",       # invalid: tab and newline characters
NA            # valid: actual missing value
)
convert_to_numeric_if_ok(crazy_vec)
}
}
